<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - PaySlipManagement.UI</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PaySlipManagement.UI.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.3/font/bootstrap-icons.min.css" integrity="sha512-dPXYcDub/aeb08c63jRq/k6GaKccl256JQy/AnOq7CAnEZ9FzSL9wSbcZkMp4R26vBsMLFYH4kQ67/bbV8XaCQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        html, body {
            height: 100%;
            margin: 0;
        }

        body {
            display: flex;
            flex-direction: column;
        }

        .container-fluid {
            flex: 1;
            padding-right: var(--bs-gutter-x, 0rem);
            padding-left: var(--bs-gutter-x, 0rem);
        }

        <!--

        .sidebar {
            min-width: 200px;
            /* background-color: #FFD580; */
            background-color: #343a40;
            color: white;
            height: 100%;
            padding-top: 1rem;
        }



            .sidebar .nav-link {
                color: rgba(255, 255, 255, 0.8);
            }

                .sidebar .nav-link:hover,
                .sidebar .nav-link.active {
                    background-color: #007bff;
                    color: white;
                }

        -->


        /* Sidebar container */
        .sidebar {
            

            width: 250px;
            height: 100vh;
            background: linear-gradient(to bottom, #f0f0f0, #343a40); /* Gradient from light to dark gray */
            padding: 20px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Subtle shadow for a modern look */
            display: flex;
            flex-direction: column;
            overflow-y: auto;
        }

            .sidebar::-webkit-scrollbar {
                width: 8px;
            }

            .sidebar::-webkit-scrollbar-thumb {
                background: linear-gradient(180deg, rgba(128, 128, 128, 0.8), rgba(192, 192, 192, 0.8)); /* Grey gradient color */
                border-radius: 5px;
            }

            /* Sidebar logo */
            .sidebar .logo {
                width: 200px;
                margin: 0 auto 20px auto;
                display: block;
            }

           

            /* Sidebar nav link styles */
            .sidebar .nav-link {
                font-size: 16px; /* Font size for links */
                color: white; /* Dark text color for links */
                padding: 10px; /* Padding for clickable area */
                text-decoration: none; /* Remove underline */
                border-radius: 5px; /* Rounded corners */
                transition: background-color 0.3s, color 0.3s; /* Smooth transition on hover */
            }

                /* Hover effect: orange background and white text */
                .sidebar .nav-link:hover {
                    background-color: #ff6f00; /* Orange background on hover */
                    color: white; /* White text on hover */
                    font-weight: bold;
                }

                /* Active or focused link state */
                .sidebar .nav-link.active, .sidebar .nav-link:focus {
                    background-color: #ff6f00; /* Orange background for active link */
                    color: white; /* White text */
                }

            /* Optional: Styling the hr (divider) */
            .sidebar hr {
                border-color: #ddd; /* Light grey divider */
                margin: 20px 0; /* Space around the divider */
            }





        .content {
            flex: 1;
            padding: 20px;
            position: relative;
            background: rgba(255, 255, 255, 0.9); 
         
        }

             /*
             .content::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-image: url('/images/whiztek_transparent_logo.png'); /* Path to your logo 
                background-repeat: no-repeat;
                background-size: 90vw 80vh; /* Adjust to cover a large portion of the page 
                background-position: 50px 90px;
                background-attachment: fixed; /* Ensures the logo stays in place while scrolling 
                opacity: 0.07; /* Adjust opacity for subtlety 
                pointer-events: none;
                z-index: 1;
                transform: rotate(-17deg); /* Rotate to display diagonally 
            } 
            */
            
          




        img {
            display: right;
            margin: 0 auto;
            opacity: 0.8;
        }

        .logo {
            width: 150px; /* Adjust size for the logo */
            height: auto;
        }

        .holiday-calendar {
            width: 100%; /* Adjust size for the holiday calendar */
            height: auto;
        }

        .footer {
            background-color: #ebebeb;
            padding: 10px;
            text-align: center;
            position: relative;
        }

        .navbar + .container {
            margin-top: 10px; /* Ensure there's space between navbar and main content */
        }

        .navbar {
            padding: 0.5rem 1rem;
            background: linear-gradient(to right, #f0f0f0, #343a40);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            
        }

        .navbar-content {
            display: flex; /* Flexbox for horizontal alignment */
            justify-content: flex-end; /* Align items to the right */
            align-items: center; /* Center items vertically */
        }

        .nav-greeting {
            color: white; /* Dark text for better readability */
            font-weight: bold;
            margin-right: 20px; /* Space between greeting and logout button */
            font-size: 16px; /* Font size for the greeting */
        }

        .nav-button {
            background-color: #5dcaff; /* Orange color */
            color: white; /* Text color */
            border: none; /* No border */
            border-radius: 20px; /* Rounded corners */
            padding: 10px 20px; /* Padding for size */
            font-size: 16px; /* Font size */
            cursor: pointer; /* Pointer cursor */
            transition: background-color 0.3s, transform 0.2s;
        }

            .nav-button:hover {
                background-color: #ff6f00; /* Darker orange on hover */
                transform: translateY(-2px);
            }

        .logout-form {
            margin: 0; /* Remove default margin */
        }

        .navbar .nav-link {
            color: #007bff;
            font-size: 16px; /* Font size for link */
            text-decoration: none; /* Remove underline */
            transition: color 0.3s;
        }

            .navbar .nav-link:hover {
                color: #0056b3;
            }
    </style>
</head>
<body>
    <div class="container-fluid d-flex">
        @{
            bool isAdminRole = Convert.ToBoolean(ViewContext.HttpContext.Items["IsAdminRole"]);

            bool isEmployeeRole = Convert.ToBoolean(ViewContext.HttpContext.Items["IsEmployeeRole"]);
            bool isManager = Convert.ToBoolean(ViewContext.HttpContext.Items["IsManager"]);
        }
        <!-- Sidebar -->
        @if (isAdminRole || isEmployeeRole)

        {
            <div class="sidebar p-3">
                <img src="@Url.Content("~/images/whiztek_transparent_logo.png")" class="logo" alt="Logo" />
                <hr>
                <nav class="nav flex-column">
                    @if (isAdminRole)
                    {
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Employee" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="Employee" asp-action="Index">Employee</a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "EmployeeTasks" && ViewContext.RouteData.Values["Action"].ToString() == "Index1" ? "active" : "")"
                           asp-area="" asp-controller="EmployeeTasks" asp-action="Index1">Employee Tasks</a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "EmployeeRegularization" && ViewContext.RouteData.Values["Action"].ToString() == "Index1" ? "active" : "")"
                           asp-area="" asp-controller="EmployeeRegularization" asp-action="Index1">Employee Regularization</a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "AccountDetails" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="AccountDetails" asp-action="Index">Account</a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Department" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="Department" asp-action="Index">Department</a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "CompanyDetails" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="CompanyDetails" asp-action="Index">Company</a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "CompanyDocuments" && ViewContext.RouteData.Values["Action"].ToString() == "Create" ? "active" : "")"
                           asp-area="" asp-controller="CompanyDocuments" asp-action="Create">Company Documents</a>
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Roles" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="Roles" asp-action="Index">Roles</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "SalaryMetadata" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="SalaryMetadata" asp-action="Index">Salary</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "User" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="User" asp-action="Index">User</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "Holiday" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="Holiday" asp-action="Index">Holiday </a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "Payslip" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="Payslip" asp-action="Index">Payslip Details</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "CTCDetails" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="CTCDetails" asp-action="Index">CTC Details</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "LeaveRequests" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="LeaveRequests" asp-action="Index">Leave Requests</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "Leaves" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="Leaves" asp-action="Index">Leaves</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "EmployeeType" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="EmployeeType" asp-action="Index">Employee Type</a>
                        <a class="nav-link  @(ViewContext.RouteData.Values["Controller"].ToString() == "Manager" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                           asp-area="" asp-controller="Manager" asp-action="Index">Manager</a>
                    }
                    @if (isEmployeeRole)
                    {
                        <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Employee" && ViewContext.RouteData.Values["Action"].ToString() == "GeneratePdf" ? "active" : "")"
                           asp-area="" asp-controller="Employee" asp-action="GeneratePdf">Employee Details</a>
                        @if (isManager) // Check if the employee is a manager
                        {
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "LeaveRequests" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                               asp-area="" asp-controller="LeaveRequests" asp-action="Index">Leaves Approval</a>
                            <a class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "EmployeeRegularization" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")"
                               asp-area="" asp-controller="EmployeeRegularization" asp-action="Index">Employee Regularization</a>
                        }
                    }
                </nav>
            </div>
        }
        <!-- Content -->
        <div class="content">
            @if (isAdminRole || isEmployeeRole)
            {
                <!-- Navbar -->
                <nav class="navbar d-flex justify-content-end">
                    <div class="navbar-content">
                        @if (Context.Session.GetString("empCode") != null)

                        {
                            <span class="nav-greeting">Hello, @Context.Session.GetString("empCode")</span>
                            <form asp-controller="Auth" asp-action="Logout" method="post" class="logout-form">
                                <button type="submit" class="nav-button">Logout</button>
                            </form>
                        }

                        else

                        {
                            <a class="nav-link" asp-area="" asp-controller="Auth" asp-action="Login">Login</a>
                        }
                    </div>
                </nav>
            }
            <!-- Main Content -->
            <div class="container">
                <main role="main">
                    @RenderBody()
                </main>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="footer text-center mt-auto">
        <div class="container">
            &copy; @DateTime.Now.Year - Whiztek Private Limited - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

   

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

